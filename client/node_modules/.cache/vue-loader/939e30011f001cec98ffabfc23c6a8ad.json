{"remainingRequest":"/home/student/Bureau/HabitsGame/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/student/Bureau/HabitsGame/client/src/views/ChallengesPages.vue?vue&type=template&id=d529582c&scoped=true","dependencies":[{"path":"/home/student/Bureau/HabitsGame/client/src/views/ChallengesPages.vue","mtime":1724995681291},{"path":"/home/student/Bureau/HabitsGame/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/student/Bureau/HabitsGame/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/student/Bureau/HabitsGame/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY2hhbGxlbmdlcy1wYWdlIj4KICAgIDxoMT5Ew6lmaXM8L2gxPgogICAgPHAgY2xhc3M9InF1ZXN0aW9uLWNvdW50Ij5RdWVzdGlvbiB7eyBjdXJyZW50UXVlc3Rpb25JbmRleCArIDEgfX0gc3VyIHt7IHF1ZXN0aW9ucy5sZW5ndGggfX08L3A+CiAgICA8aDI+e3sgY3VycmVudFF1ZXN0aW9uLnRleHQgfX08L2gyPgogICAgPENvbG9yU2NhbGUKICAgICAgOnZhbHVlPSJzZWxlY3RlZFZhbHVlIgogICAgICBAaW5wdXQ9ImhhbmRsZUlucHV0IgogICAgICBAbmV4dC1xdWVzdGlvbj0ibmV4dFF1ZXN0aW9uIgogICAgICByZWY9ImNvbG9yU2NhbGUiCiAgICAvPgogICAgPGRpdiBjbGFzcz0iYnV0dG9uLWNvbnRhaW5lciI+CiAgICAgIDxidXR0b24gY2xhc3M9Im5leHQtcXVlc3Rpb24tYnRuIiBAY2xpY2s9Im5leHRRdWVzdGlvbiIgOmRpc2FibGVkPSJpc0xhc3RRdWVzdGlvbiAmJiBtZXNzYWdlRGlzcGxheWVkIj5RdWVzdGlvbiBzdWl2YW50ZTwvYnV0dG9uPgogICAgPC9kaXY+CiAgICA8ZGl2IHYtaWY9ImlzTGFzdFF1ZXN0aW9uICYmIG1lc3NhZ2VEaXNwbGF5ZWQiIGNsYXNzPSJidXR0b24tY29udGFpbmVyIj4KICAgICAgPGJ1dHRvbiBjbGFzcz0icmVzZXQtYnRuIiBAY2xpY2s9InJlc2V0QW5zd2VycyI+UsOpaW5pdGlhbGlzZXI8L2J1dHRvbj4KICAgICAgPGJ1dHRvbiBjbGFzcz0idmFsaWRhdGUtYnRuIiBAY2xpY2s9InN1Ym1pdEFuc3dlcnMiPlNvdW1ldHRyZSBsZXMgcsOpcG9uc2VzPC9idXR0b24+CiAgICA8L2Rpdj4KICAgIDwhLS0gVGFibGVhdSBleHBsaWNhdGlmIGRlcyBjb3VsZXVycyAtLT4KICAgIDxkaXYgY2xhc3M9ImNvbG9yLWxlZ2VuZCI+CiAgICAgIDxoMz5Mw6lnZW5kZSBkZXMgQ291bGV1cnM8L2gzPgogICAgICA8dGFibGU+CiAgICAgICAgPHRoZWFkPgogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGg+Q291bGV1cjwvdGg+CiAgICAgICAgICAgIDx0aD5GcsOpcXVlbmNlPC90aD4KICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90aGVhZD4KICAgICAgICA8dGJvZHk+CiAgICAgICAgICA8dHIgdi1mb3I9Iihjb2xvciwgaW5kZXgpIGluIGNvbG9yTGVnZW5kIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sb3ItYm94IiA6Y2xhc3M9ImNvbG9yLmNsYXNzIj48L3RkPgogICAgICAgICAgICA8dGQ+e3sgY29sb3IudGV4dCB9fTwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGJvZHk+CiAgICAgIDwvdGFibGU+CiAgICA8L2Rpdj4KICAgIDxkaXYgdi1pZj0ibWVzc2FnZURpc3BsYXllZCIgY2xhc3M9InRoYW5rLXlvdS1tZXNzYWdlIj4KICAgICAgTWVyY2kgcG91ciB2b3MgcsOpcG9uc2VzICEKICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/student/Bureau/HabitsGame/client/src/views/ChallengesPages.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACblC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IACD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClI,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACppD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC1B,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/student/Bureau/HabitsGame/client/src/views/ChallengesPages.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"challenges-page\">\n    <h1>Défis</h1>\n    <p class=\"question-count\">Question {{ currentQuestionIndex + 1 }} sur {{ questions.length }}</p>\n    <h2>{{ currentQuestion.text }}</h2>\n    <ColorScale\n      :value=\"selectedValue\"\n      @input=\"handleInput\"\n      @next-question=\"nextQuestion\"\n      ref=\"colorScale\"\n    />\n    <div class=\"button-container\">\n      <button class=\"next-question-btn\" @click=\"nextQuestion\" :disabled=\"isLastQuestion && messageDisplayed\">Question suivante</button>\n    </div>\n    <div v-if=\"isLastQuestion && messageDisplayed\" class=\"button-container\">\n      <button class=\"reset-btn\" @click=\"resetAnswers\">Réinitialiser</button>\n      <button class=\"validate-btn\" @click=\"submitAnswers\">Soumettre les réponses</button>\n    </div>\n    <!-- Tableau explicatif des couleurs -->\n    <div class=\"color-legend\">\n      <h3>Légende des Couleurs</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Couleur</th>\n            <th>Fréquence</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(color, index) in colorLegend\" :key=\"index\">\n            <td class=\"color-box\" :class=\"color.class\"></td>\n            <td>{{ color.text }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div v-if=\"messageDisplayed\" class=\"thank-you-message\">\n      Merci pour vos réponses !\n    </div>\n  </div>\n</template>\n\n<script>\nimport ColorScale from '@/components/ColorScale.vue'; // Assurez-vous que le chemin est correct\n\nexport default {\n  name: 'ChallengesPages',\n  components: {\n    ColorScale,\n  },\n  data() {\n    return {\n      questions: [\n        { text: \"Habituellement, à quelle fréquence consommez-vous des légumes, en dehors des pommes de terre ?\" },\n        { text: \"Habituellement, à quelle fréquence consommez-vous des légumes secs (comme des lentilles, pois chiches, haricots secs) ?\" },\n        { text: \"Habituellement, à quelle fréquence consommez-vous des féculents complets (comme du pain complet, des pâtes complètes ou du riz complet) ?\" },\n      ],\n      currentQuestionIndex: 0,\n      selectedValue: 3,\n      answers: [],\n      colorLegend: [\n        { class: 'red', text: 'Rouge : 1 à 3 fois par semaine' },\n        { class: 'orange', text: 'Orange : 4 à 6 fois par semaine' },\n        { class: 'yellow', text: 'Jaune : 1 fois par jour' },\n        { class: 'green', text: 'Vert : 2 fois par jour' },\n        { class: 'blue', text: 'Bleu : 3 fois par jour' },\n        { class: 'violet', text: 'Violet : 4 fois et plus par jour' },\n      ],\n      messageDisplayed: false // Nouvelle variable pour suivre l'affichage du message\n    };\n  },\n  computed: {\n    currentQuestion() {\n      return this.questions[this.currentQuestionIndex];\n    },\n    isLastQuestion() {\n      return this.currentQuestionIndex === this.questions.length - 1;\n    },\n  },\n  methods: {\n    handleInput(value) {\n      this.selectedValue = value;\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.answers.push({ question: this.currentQuestion.text, answer: this.selectedValue });\n        this.selectedValue = 3;\n        if (this.$refs.colorScale && typeof this.$refs.colorScale.clearSelection === 'function') {\n          this.$refs.colorScale.clearSelection();\n        }\n        this.currentQuestionIndex++;\n      } else {\n        // Afficher le message de remerciement après la dernière question\n        this.answers.push({ question: this.currentQuestion.text, answer: this.selectedValue });\n        this.selectedValue = 3;\n        if (this.$refs.colorScale && typeof this.$refs.colorScale.clearSelection === 'function') {\n          this.$refs.colorScale.clearSelection();\n        }\n        this.messageDisplayed = true;\n      }\n    },\n    submitAnswers() {\n      const score = this.answers.length; // Chaque réponse donne 1 point\n      const feedback = this.answers.map(answer => this.generateFeedback(answer.answer));\n      const scoreItem = {\n        date: new Date(),\n        type: 'Défi',\n        detail: 'Questionnaire sur l\\'alimentation',\n        score: score,\n        feedback: feedback.join(' ')\n      };\n      \n      // Récupérer l'historique des scores actuel\n      const existingScores = JSON.parse(localStorage.getItem('scoreHistory')) || [];\n      \n      // Ajouter le nouveau score\n      existingScores.push(scoreItem);\n      \n      // Sauvegarder l'historique des scores mis à jour\n      localStorage.setItem('scoreHistory', JSON.stringify(existingScores));\n      \n      this.$router.push('/score'); // Rediriger vers la page des scores\n      this.resetAnswers();\n    },\n    resetAnswers() {\n      this.answers = [];\n      this.currentQuestionIndex = 0;\n      this.selectedValue = 3;\n      this.messageDisplayed = false; // Réinitialiser le message affiché\n      if (this.$refs.colorScale && typeof this.$refs.colorScale.clearSelection === 'function') {\n        this.$refs.colorScale.clearSelection();\n      }\n    },\n    generateFeedback(colorValue) {\n      // Mappage des couleurs vers des feedbacks spécifiques\n      switch(colorValue) {\n        case 1: // Rouge\n        case 2: // Orange\n          return \"Il faut manger plus de légumes et de féculents complets.\";\n        case 3: // Jaune\n        case 4: // Vert\n          return \"C'est bon, continuez à maintenir ces habitudes.\";\n        case 5: // Bleu\n        case 6: // Violet\n          return \"Essayez de diminuer un peu la consommation.\";\n        default:\n          return \"\";\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n.challenges-page {\n  text-align: center;\n  margin-top: 50px;\n}\n\nh1 {\n  font-size: 32px;\n  margin-bottom: 20px;\n}\n\n.question-count {\n  font-size: 18px;\n  margin-bottom: 10px;\n  color: #555;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.validate-btn,\n.reset-btn,\n.next-question-btn {\n  padding: 15px 30px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin: 0 10px;\n}\n\n.validate-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.validate-btn:hover {\n  background-color: #45a049;\n}\n\n.reset-btn {\n  background-color: #f44336;\n  color: white;\n}\n\n.reset-btn:hover {\n  background-color: #d32f2f;\n}\n\n.next-question-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.next-question-btn:hover {\n  background-color: #1976D2;\n}\n\n.color-legend {\n  margin-top: 30px;\n  padding: 10px;\n  border-top: 2px solid #ccc;\n  display: inline-block;\n  max-width: 400px;\n  text-align: left;\n}\n\n.color-legend h3 {\n  font-size: 18px;\n  margin-bottom: 10px;\n}\n\n.color-legend table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 14px;\n}\n\n.color-legend th,\n.color-legend td {\n  border: 1px solid #ddd;\n  padding: 5px;\n  text-align: left;\n}\n\n.color-legend th {\n  background-color: #f4f4f4;\n}\n\n.color-box {\n  width: 20px;\n  height: 20px;\n  display: inline-block;\n  border-radius: 5px;\n}\n\n.red { background-color: red; }\n.orange { background-color: orange; }\n.yellow { background-color: yellow; }\n.green { background-color: green; }\n.blue { background-color: blue; }\n.violet { background-color: violet; }\n\n.button-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.reset-btn, .validate-btn, .next-question-btn {\n  margin: 0 5px;\n}\n\n.thank-you-message {\n  margin-top: 20px;\n  font-size: 20px;\n  color: #4CAF50;\n}\n</style>\n"]}]}